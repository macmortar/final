# -*- coding: utf-8 -*-
"""app projeto final

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lk2_rmDyXATfLu3ZgXn16w9aXVGiWtMo
"""

import joblib
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
from sklearn.neural_network import MLPRegressor
from sklearn.preprocessing import StandardScaler
import numpy as np
st.title("Previsão de Nota de Estudantes com Base nos Hábitos")

# Inputs numéricos
study_hours = st.slider("Horas de estudo por dia", 0.0, 10.0, 2.0)
sleep_hours = st.slider("Horas de sono por dia", 0.0, 12.0, 7.0)
exercise_frequency = st.slider("Frequência de exercícios por semana", 0, 7, 3)
social_media_hours = st.slider("Horas em redes sociais por dia", 0.0, 10.0, 3.0)
netflix_hours = st.slider("Horas assistindo Netflix por dia", 0.0, 10.0, 2.0)
mental_health_rating = st.slider("Avaliação da saúde mental (0 = ruim, 10 = ótima)", 0.0, 10.0, 5.0)
gender_male = st.checkbox("Gênero: Masculino")
diet_vegetarian = st.checkbox("Dieta: Vegetariana")
diet_vegan = st.checkbox("Dieta: Vegana")
internet_quality_Medium = st.checkbox("Qualidade da internet: Média")
internet_quality_Poor = st.checkbox("Qualidade da internet: Ruim")
parental_education_level_High_School = st.checkbox("Escolaridade dos pais: Ensino Médio")
parental_education_level_Postgraduate = st.checkbox("Escolaridade dos pais: Pós-graduação")
# Construir vetor de entrada na mesma ordem do modelo treinado
entrada = np.array([[
    study_hours,
    sleep_hours,
    exercise_frequency,
    social_media_hours,
    netflix_hours,
    mental_health_rating,
    int(gender_male),
    int(diet_vegetarian),
    int(diet_vegan),
    int(internet_quality_Medium),
    int(internet_quality_Poor),
    int(parental_education_level_High_School),
    int(parental_education_level_Postgraduate)
]])
# Carregar modelo
modelo = joblib.load("model.pkl")

# Fazer previsão
if st.button("Prever Nota"):
    nota_prevista = modelo.predict(entrada)[0]
    st.success(f"A nota prevista no exame é: **{nota_prevista:.2f}**")